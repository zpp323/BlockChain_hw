{
  "contractName": "Ownable",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NOT_CURRENT_OWNER",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CANNOT_TRANSFER_TO_ZERO_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NOT_CURRENT_OWNER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract has an owner address, and provides basic authorization control whitch simplifies the implementation of user permissions. This contract is based on the source code at: https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol\",\"events\":{\"OwnershipTransferred(address,address)\":{\"details\":\"An event which is triggered when the owner is changed.\",\"params\":{\"newOwner\":\"The address of the new owner.\",\"previousOwner\":\"The address of the previous owner.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The constructor sets the original `owner` of the contract to the sender account.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"stateVariables\":{\"NOT_CURRENT_OWNER\":{\"details\":\"Error constants.\"},\"owner\":{\"details\":\"Current owner address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/ethereum-erc721/src/contracts/ownership/ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/ethereum-erc721/src/contracts/ownership/ownable.sol\":{\"keccak256\":\"0xe2437d0da0fc402c63b50b14889950abcdf9ae73c0fea0080c6528a8079569bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebd36702bc3889b6c5f827583dfccc9cbfb7854e1de65f6a14fd9cf046e6983f\",\"dweb:/ipfs/QmREe4oothwXG9L59nEJQAxixw3eQnLZ49eBVpozVcBGiF\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610535806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063860d248a146100515780638da5cb5b1461006f578063f2fde38b1461008d578063f3fe3bc3146100a9575b600080fd5b6100596100c7565b604051610066919061042f565b60405180910390f35b610077610100565b6040516100849190610414565b60405180910390f35b6100a760048036038101906100a2919061039f565b610124565b005b6100b1610351565b6040516100be919061042f565b60405180910390f35b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e1919061042f565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525090610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a919061042f565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b600081359050610399816104e8565b92915050565b6000602082840312156103b5576103b46104d2565b5b60006103c38482850161038a565b91505092915050565b6103d58161046d565b82525050565b60006103e682610451565b6103f0818561045c565b935061040081856020860161049f565b610409816104d7565b840191505092915050565b600060208201905061042960008301846103cc565b92915050565b6000602082019050818103600083015261044981846103db565b905092915050565b600081519050919050565b600082825260208201905092915050565b60006104788261047f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156104bd5780820151818401526020810190506104a2565b838111156104cc576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b6104f18161046d565b81146104fc57600080fd5b5056fea2646970667358221220a609df8996108031c6d3709d0cd1005130cd948465a41fc520e244731aca1e6a64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063860d248a146100515780638da5cb5b1461006f578063f2fde38b1461008d578063f3fe3bc3146100a9575b600080fd5b6100596100c7565b604051610066919061042f565b60405180910390f35b610077610100565b6040516100849190610414565b60405180910390f35b6100a760048036038101906100a2919061039f565b610124565b005b6100b1610351565b6040516100be919061042f565b60405180910390f35b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e1919061042f565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525090610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a919061042f565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b600081359050610399816104e8565b92915050565b6000602082840312156103b5576103b46104d2565b5b60006103c38482850161038a565b91505092915050565b6103d58161046d565b82525050565b60006103e682610451565b6103f0818561045c565b935061040081856020860161049f565b610409816104d7565b840191505092915050565b600060208201905061042960008301846103cc565b92915050565b6000602082019050818103600083015261044981846103db565b905092915050565b600081519050919050565b600082825260208201905092915050565b60006104788261047f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156104bd5780820151818401526020810190506104a2565b838111156104cc576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b6104f18161046d565b81146104fc57600080fd5b5056fea2646970667358221220a609df8996108031c6d3709d0cd1005130cd948465a41fc520e244731aca1e6a64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2915:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:10",
                "type": ""
              }
            ],
            "src": "7:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "266:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "357:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "372:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "386:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "376:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "401:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "436:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "447:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "432:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "432:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "456:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "411:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "401:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:10",
                "type": ""
              }
            ],
            "src": "152:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "552:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "569:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "592:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "574:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "574:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "540:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "547:3:10",
                "type": ""
              }
            ],
            "src": "487:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "703:272:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "713:53:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "760:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "727:32:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:39:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "717:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "775:78:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "841:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "846:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "782:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:71:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "775:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "888:5:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "895:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "884:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "884:16:10"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "902:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "907:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "862:21:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "862:52:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "862:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "923:46:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "934:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "961:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "939:21:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:29:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "930:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "930:39:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "923:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "684:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "691:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "699:3:10",
                "type": ""
              }
            ],
            "src": "611:364:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1079:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1089:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1101:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1112:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1097:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1097:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1089:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1169:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1182:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1193:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1178:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1178:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1125:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1125:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1051:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1063:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1074:4:10",
                "type": ""
              }
            ],
            "src": "981:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1327:195:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1337:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1349:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1360:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1345:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1345:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1337:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1384:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1395:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1380:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1380:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1403:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1409:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1399:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1399:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1373:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1373:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1429:86:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1501:6:10"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1510:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1437:63:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1437:78:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1429:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1299:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1311:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1322:4:10",
                "type": ""
              }
            ],
            "src": "1209:313:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1568:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1578:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1594:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1588:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1588:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1578:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1561:6:10",
                "type": ""
              }
            ],
            "src": "1528:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1668:40:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1679:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1695:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1689:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1689:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1679:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1651:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1661:6:10",
                "type": ""
              }
            ],
            "src": "1609:99:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1810:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1827:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1832:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1820:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1820:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1820:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1848:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1867:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1872:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1863:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1863:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1848:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1782:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1787:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1798:11:10",
                "type": ""
              }
            ],
            "src": "1714:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1934:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1944:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1973:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1955:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1955:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1944:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1916:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1926:7:10",
                "type": ""
              }
            ],
            "src": "1889:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2036:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2046:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2061:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2068:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2057:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2046:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2018:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2028:7:10",
                "type": ""
              }
            ],
            "src": "1991:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2172:258:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2182:10:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2191:1:10",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2186:1:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2251:63:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2276:3:10"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2281:1:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2272:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2272:11:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2295:3:10"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2300:1:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2291:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2291:11:10"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2285:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2285:18:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2265:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2265:39:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2265:39:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2212:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2215:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2209:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2209:13:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2223:19:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2225:15:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2234:1:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2237:2:10",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2230:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2230:10:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2225:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2205:3:10",
                    "statements": []
                  },
                  "src": "2201:113:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2348:76:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2398:3:10"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2403:6:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2394:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2394:16:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2412:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2387:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2387:27:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2387:27:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2329:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2332:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2326:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2326:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2323:2:10"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2154:3:10",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2159:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2164:6:10",
                "type": ""
              }
            ],
            "src": "2123:307:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2525:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2542:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2545:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2535:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2535:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2535:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "2436:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2648:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2665:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2668:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2658:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2658:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2658:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "2559:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2730:54:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2740:38:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2758:5:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2765:2:10",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2754:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2754:14:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2774:2:10",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2770:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2770:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2750:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:28:10"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "2740:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2713:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "2723:6:10",
                "type": ""
              }
            ],
            "src": "2682:102:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2833:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2890:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2899:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2902:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2892:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2892:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2892:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2856:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2881:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2863:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2863:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2853:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2853:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2846:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2846:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2843:2:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2826:5:10",
                "type": ""
              }
            ],
            "src": "2790:122:10"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "364:1311:1:-:0;;;1039:48;;;;;;;;;;1071:10;1063:5;;:18;;;;;;;;;;;;;;;;;;364:1311;;;;;;",
  "deployedSourceMap": "364:1311:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;607:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1432:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;431:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;487:65;;;;;;;;;;;;;;;;;;;:::o;607:20::-;;;;;;;;;;;;:::o;1432:238::-;1225:5;;;;;;;;;;1211:19;;:10;:19;;;1232:17;;;;;;;;;;;;;;;;;1203:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1554:1:::1;1533:23;;:9;:23;;;;1558:31;;;;;;;;;;;;;;;;::::0;1525:65:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1630:9;1602:38;;1623:5;::::0;::::1;;;;;;;;1602:38;;;;;;;;;;;;1655:9;1647:5;::::0;:17:::1;;;;;;;;;;;;;;;;;;1432:238:::0;:::o;431:51::-;;;;;;;;;;;;;;;;;;;:::o;7:139:10:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;266:79;;:::i;:::-;228:2;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;218:263;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;552:53;;:::o;611:364::-;699:3;727:39;760:5;727:39;:::i;:::-;782:71;846:6;841:3;782:71;:::i;:::-;775:78;;862:52;907:6;902:3;895:4;888:5;884:16;862:52;:::i;:::-;939:29;961:6;939:29;:::i;:::-;934:3;930:39;923:46;;703:272;;;;;:::o;981:222::-;1074:4;1112:2;1101:9;1097:18;1089:26;;1125:71;1193:1;1182:9;1178:17;1169:6;1125:71;:::i;:::-;1079:124;;;;:::o;1209:313::-;1322:4;1360:2;1349:9;1345:18;1337:26;;1409:9;1403:4;1399:20;1395:1;1384:9;1380:17;1373:47;1437:78;1510:4;1501:6;1437:78;:::i;:::-;1429:86;;1327:195;;;;:::o;1609:99::-;1661:6;1695:5;1689:12;1679:22;;1668:40;;;:::o;1714:169::-;1798:11;1832:6;1827:3;1820:19;1872:4;1867:3;1863:14;1848:29;;1810:73;;;;:::o;1889:96::-;1926:7;1955:24;1973:5;1955:24;:::i;:::-;1944:35;;1934:51;;;:::o;1991:126::-;2028:7;2068:42;2061:5;2057:54;2046:65;;2036:81;;;:::o;2123:307::-;2191:1;2201:113;2215:6;2212:1;2209:13;2201:113;;;2300:1;2295:3;2291:11;2285:18;2281:1;2276:3;2272:11;2265:39;2237:2;2234:1;2230:10;2225:15;;2201:113;;;2332:6;2329:1;2326:13;2323:2;;;2412:1;2403:6;2398:3;2394:16;2387:27;2323:2;2172:258;;;;:::o;2559:117::-;2668:1;2665;2658:12;2682:102;2723:6;2774:2;2770:7;2765:2;2758:5;2754:14;2750:28;2740:38;;2730:54;;;:::o;2790:122::-;2863:24;2881:5;2863:24;:::i;:::-;2856:5;2853:35;2843:2;;2902:1;2899;2892:12;2843:2;2833:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.6;\r\n\r\n/**\r\n * @dev The contract has an owner address, and provides basic authorization control whitch\r\n * simplifies the implementation of user permissions. This contract is based on the source code at:\r\n * https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol\r\n */\r\ncontract Ownable\r\n{\r\n\r\n  /**\r\n   * @dev Error constants.\r\n   */\r\n  string public constant NOT_CURRENT_OWNER = \"018001\";\r\n  string public constant CANNOT_TRANSFER_TO_ZERO_ADDRESS = \"018002\";\r\n\r\n  /**\r\n   * @dev Current owner address.\r\n   */\r\n  address public owner;\r\n\r\n  /**\r\n   * @dev An event which is triggered when the owner is changed.\r\n   * @param previousOwner The address of the previous owner.\r\n   * @param newOwner The address of the new owner.\r\n   */\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n  /**\r\n   * @dev The constructor sets the original `owner` of the contract to the sender account.\r\n   */\r\n  constructor()\r\n  {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner()\r\n  {\r\n    require(msg.sender == owner, NOT_CURRENT_OWNER);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(\r\n    address _newOwner\r\n  )\r\n    public\r\n    onlyOwner\r\n  {\r\n    require(_newOwner != address(0), CANNOT_TRANSFER_TO_ZERO_ADDRESS);\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n\r\n}\r\n",
  "sourcePath": "D:\\ZJU5\\区块链与数字货币\\大作业\\hw\\ethereum-erc721\\src\\contracts\\ownership\\ownable.sol",
  "ast": {
    "absolutePath": "project:/ethereum-erc721/src/contracts/ownership/ownable.sol",
    "exportedSymbols": {
      "Ownable": [
        809
      ]
    },
    "id": 810,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 739,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 740,
          "nodeType": "StructuredDocumentation",
          "src": "59:303:1",
          "text": " @dev The contract has an owner address, and provides basic authorization control whitch\n simplifies the implementation of user permissions. This contract is based on the source code at:\n https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol"
        },
        "fullyImplemented": true,
        "id": 809,
        "linearizedBaseContracts": [
          809
        ],
        "name": "Ownable",
        "nameLocation": "373:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "documentation": {
              "id": 741,
              "nodeType": "StructuredDocumentation",
              "src": "389:38:1",
              "text": " @dev Error constants."
            },
            "functionSelector": "f3fe3bc3",
            "id": 744,
            "mutability": "constant",
            "name": "NOT_CURRENT_OWNER",
            "nameLocation": "454:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 809,
            "src": "431:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 742,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "431:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "303138303031",
              "id": 743,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "474:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bd0bb0ffcede826a2f9c8e6df6999546ede560374c0eac292714390c5fb3897d",
                "typeString": "literal_string \"018001\""
              },
              "value": "018001"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "860d248a",
            "id": 747,
            "mutability": "constant",
            "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
            "nameLocation": "510:31:1",
            "nodeType": "VariableDeclaration",
            "scope": 809,
            "src": "487:65:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 745,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "487:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "303138303032",
              "id": 746,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "544:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a5b29f7035b13dcadb3cd5c407a8edcad826c048054710c3b5817e694ac8cf3f",
                "typeString": "literal_string \"018002\""
              },
              "value": "018002"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 748,
              "nodeType": "StructuredDocumentation",
              "src": "559:44:1",
              "text": " @dev Current owner address."
            },
            "functionSelector": "8da5cb5b",
            "id": 750,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "622:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 809,
            "src": "607:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 749,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 751,
              "nodeType": "StructuredDocumentation",
              "src": "634:190:1",
              "text": " @dev An event which is triggered when the owner is changed.\n @param previousOwner The address of the previous owner.\n @param newOwner The address of the new owner."
            },
            "id": 757,
            "name": "OwnershipTransferred",
            "nameLocation": "834:20:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "877:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "861:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 755,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "913:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "897:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "854:72:1"
            },
            "src": "828:99:1"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "1056:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 761,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "1063:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 762,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1071:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1071:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1063:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:18:1"
                }
              ]
            },
            "documentation": {
              "id": 758,
              "nodeType": "StructuredDocumentation",
              "src": "933:102:1",
              "text": " @dev The constructor sets the original `owner` of the contract to the sender account."
            },
            "id": 767,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:1"
            },
            "returnParameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1056:0:1"
            },
            "scope": 809,
            "src": "1039:48:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "1196:68:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 771,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1211:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1211:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 773,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 750,
                          "src": "1225:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1211:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 775,
                        "name": "NOT_CURRENT_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "1232:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 770,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1203:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:47:1"
                },
                {
                  "id": 778,
                  "nodeType": "PlaceholderStatement",
                  "src": "1257:1:1"
                }
              ]
            },
            "documentation": {
              "id": 768,
              "nodeType": "StructuredDocumentation",
              "src": "1093:75:1",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 780,
            "name": "onlyOwner",
            "nameLocation": "1181:9:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:2:1"
            },
            "src": "1172:92:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 807,
              "nodeType": "Block",
              "src": "1518:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 789,
                          "name": "_newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 783,
                          "src": "1533:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1554:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1546:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 790,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1546:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1546:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1533:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 795,
                        "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "1558:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1525:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:65:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 799,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "1623:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 800,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "1630:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 798,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "1602:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1602:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "EmitStatement",
                  "src": "1597:43:1"
                },
                {
                  "expression": {
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 803,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "1647:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 804,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "1655:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1647:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:17:1"
                }
              ]
            },
            "documentation": {
              "id": 781,
              "nodeType": "StructuredDocumentation",
              "src": "1270:158:1",
              "text": " @dev Allows the current owner to transfer control of the contract to a newOwner.\n @param _newOwner The address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 808,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 785,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 780,
                  "src": "1505:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1505:9:1"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "1441:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "1473:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "1465:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1458:29:1"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:1"
            },
            "scope": 809,
            "src": "1432:238:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 810,
        "src": "364:1311:1",
        "usedErrors": []
      }
    ],
    "src": "33:1644:1"
  },
  "legacyAST": {
    "absolutePath": "project:/ethereum-erc721/src/contracts/ownership/ownable.sol",
    "exportedSymbols": {
      "Ownable": [
        809
      ]
    },
    "id": 810,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 739,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 740,
          "nodeType": "StructuredDocumentation",
          "src": "59:303:1",
          "text": " @dev The contract has an owner address, and provides basic authorization control whitch\n simplifies the implementation of user permissions. This contract is based on the source code at:\n https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol"
        },
        "fullyImplemented": true,
        "id": 809,
        "linearizedBaseContracts": [
          809
        ],
        "name": "Ownable",
        "nameLocation": "373:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "documentation": {
              "id": 741,
              "nodeType": "StructuredDocumentation",
              "src": "389:38:1",
              "text": " @dev Error constants."
            },
            "functionSelector": "f3fe3bc3",
            "id": 744,
            "mutability": "constant",
            "name": "NOT_CURRENT_OWNER",
            "nameLocation": "454:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 809,
            "src": "431:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 742,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "431:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "303138303031",
              "id": 743,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "474:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bd0bb0ffcede826a2f9c8e6df6999546ede560374c0eac292714390c5fb3897d",
                "typeString": "literal_string \"018001\""
              },
              "value": "018001"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "860d248a",
            "id": 747,
            "mutability": "constant",
            "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
            "nameLocation": "510:31:1",
            "nodeType": "VariableDeclaration",
            "scope": 809,
            "src": "487:65:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 745,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "487:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "303138303032",
              "id": 746,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "544:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a5b29f7035b13dcadb3cd5c407a8edcad826c048054710c3b5817e694ac8cf3f",
                "typeString": "literal_string \"018002\""
              },
              "value": "018002"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 748,
              "nodeType": "StructuredDocumentation",
              "src": "559:44:1",
              "text": " @dev Current owner address."
            },
            "functionSelector": "8da5cb5b",
            "id": 750,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "622:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 809,
            "src": "607:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 749,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 751,
              "nodeType": "StructuredDocumentation",
              "src": "634:190:1",
              "text": " @dev An event which is triggered when the owner is changed.\n @param previousOwner The address of the previous owner.\n @param newOwner The address of the new owner."
            },
            "id": 757,
            "name": "OwnershipTransferred",
            "nameLocation": "834:20:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "877:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "861:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 755,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "913:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "897:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "854:72:1"
            },
            "src": "828:99:1"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "1056:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 761,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "1063:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 762,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1071:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1071:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1063:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:18:1"
                }
              ]
            },
            "documentation": {
              "id": 758,
              "nodeType": "StructuredDocumentation",
              "src": "933:102:1",
              "text": " @dev The constructor sets the original `owner` of the contract to the sender account."
            },
            "id": 767,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:1"
            },
            "returnParameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1056:0:1"
            },
            "scope": 809,
            "src": "1039:48:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "1196:68:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 771,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1211:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1211:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 773,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 750,
                          "src": "1225:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1211:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 775,
                        "name": "NOT_CURRENT_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "1232:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 770,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1203:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:47:1"
                },
                {
                  "id": 778,
                  "nodeType": "PlaceholderStatement",
                  "src": "1257:1:1"
                }
              ]
            },
            "documentation": {
              "id": 768,
              "nodeType": "StructuredDocumentation",
              "src": "1093:75:1",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 780,
            "name": "onlyOwner",
            "nameLocation": "1181:9:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:2:1"
            },
            "src": "1172:92:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 807,
              "nodeType": "Block",
              "src": "1518:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 789,
                          "name": "_newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 783,
                          "src": "1533:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1554:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1546:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 790,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1546:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1546:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1533:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 795,
                        "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "1558:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1525:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:65:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 799,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "1623:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 800,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "1630:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 798,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "1602:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1602:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "EmitStatement",
                  "src": "1597:43:1"
                },
                {
                  "expression": {
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 803,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "1647:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 804,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "1655:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1647:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:17:1"
                }
              ]
            },
            "documentation": {
              "id": 781,
              "nodeType": "StructuredDocumentation",
              "src": "1270:158:1",
              "text": " @dev Allows the current owner to transfer control of the contract to a newOwner.\n @param _newOwner The address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 808,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 785,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 780,
                  "src": "1505:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1505:9:1"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "1441:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "1473:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "1465:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1458:29:1"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:1"
            },
            "scope": 809,
            "src": "1432:238:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 810,
        "src": "364:1311:1",
        "usedErrors": []
      }
    ],
    "src": "33:1644:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-03T11:19:34.588Z",
  "devdoc": {
    "details": "The contract has an owner address, and provides basic authorization control whitch simplifies the implementation of user permissions. This contract is based on the source code at: https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol",
    "events": {
      "OwnershipTransferred(address,address)": {
        "details": "An event which is triggered when the owner is changed.",
        "params": {
          "newOwner": "The address of the new owner.",
          "previousOwner": "The address of the previous owner."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "The constructor sets the original `owner` of the contract to the sender account."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "stateVariables": {
      "NOT_CURRENT_OWNER": {
        "details": "Error constants."
      },
      "owner": {
        "details": "Current owner address."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}